{"version":3,"sources":["components/menu-item/index.jsx","components/menu/index.jsx","helpers/format.js","helpers/fullscreenOff.js","modules/controls/controls-top/index.jsx","modules/controls/pause-big-button/index.jsx","modules/controls/controls-bottom/index.jsx","components/loader/index.jsx","modules/controls/index.jsx","components/player/index.jsx","themes.js","components/title/index.jsx","app.js","index.js"],"names":["MenuItem","props","thumb","id","catchVideoId","className","onClick","src","alt","NextArrow","PrevArrow","Menu","settings","infinite","initialSlide","speed","slidesToShow","slidesToScroll","centerMode","focusOnSelect","nextArrow","prevArrow","data","map","item","key","format","elemTime","duration","currTime","durationTime","minutes","m","toString","substr","indexOf","s","Math","round","parseInt","timePercentage","fullscreenOff","setIsFullScreen","exitHandler","document","fullscreenElement","webkitIsFullScreen","mozFullScreen","msFullscreenElement","webkitExitFullscreen","mozExitFullscreen","msExitFullscreen","oExitFullscreen","call","window","scrollBy","addEventListener","ControlsTop","titleData","controlsHidden","isVolumeChange","volume","PauseBigButton","setIsPlayButtonHover","playVideo","isPlayButtonHover","onMouseLeave","onMouseEnter","ControlsBottom","isMuted","isPlaying","progressLine","mute","playTime","recognizeClick","setControlsHidden","resize","hoverProgressLine","hoveredTime","positionHoveredTime","onMouseOut","onMouseOver","setTimeout","e","onMouseMove","style","width","left","height","Loader","Controls","canPlay","handleClick","handleDoubleClick","bind","onDoubleClick","Player","useEffect","videoEl","current","onmousemove","oncanplaythrough","setCanPlay","onloadedmetadata","formattingTime","setDurationTime","onloadeddata","savedCurrentTime","localStorage","getItem","currentTime","ontimeupdate","updateProgressLine","setPlayTime","setItem","onended","setIsPlaying","readyState","useState","isFullScreen","setVolume","setIsMuted","setIsVolumeChange","setHoveredTime","setPositionHoveredTime","useRef","player","currVideo","pause","play","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","oRequestFullscreen","timer","prevent","ref","onKeyDown","keyCode","preventDefault","newVolume1","newVolume2","keyAction","tabIndex","objectFit","muted","elem","fullVolume","getElementById","getBoundingClientRect","newVolume","clientY","top","elemLeft","fullWidth","right","newPlayTimePercentage","clientX","newCurrentTime","clearTimeout","newWidth","time","redTheme","pinkTheme","Title","savedTheme","applyTheme","currentTheme","React","setTheme","switchTheme","theme","newTheme","nextTheme","Object","keys","forEach","value","documentElement","setProperty","App","savedVideo","testData","sources","setCurrVideo","title","subtitle","setTitleData","ReactDOM","render"],"mappings":"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","file":"static/js/main.fd330853.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './menu-item.css';\r\nconst MenuItem = props => {\r\n\r\n    const { thumb, id, catchVideoId } = props;\r\n    return (\r\n        <div className=\"slider-item\" onClick={() => catchVideoId(id)}>\r\n            <img src={thumb} alt=\"Video preview\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuItem;","import React from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"./menu.css\";\r\nimport MenuItem from \"../menu-item\";\r\n\r\nconst NextArrow = props => {\r\n    return <i onClick={props.onClick} className='material-icons slider-arrow arrow-next'>keyboard_arrow_right</i>;\r\n};\r\n\r\nconst PrevArrow = props => {\r\n  return <i onClick={props.onClick} className='material-icons slider-arrow arrow-prev'>keyboard_arrow_left</i>;\r\n};\r\n\r\nconst Menu = props => {\r\n    var settings = {\r\n        infinite: true,\r\n        initialSlide: 2,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        centerMode: true,\r\n        focusOnSelect: true,\r\n        nextArrow: <NextArrow />,\r\n        prevArrow: <PrevArrow />\r\n    };\r\n\r\n    const { data, catchVideoId } = props;\r\n    return (\r\n        <div className='menu'>\r\n            <Slider {...settings}>\r\n                {data.map(item => {\r\n                    return <MenuItem id={item.id} thumb={item.thumb} key={item.id} catchVideoId={catchVideoId} />;\r\n                })}\r\n            </Slider>\r\n            <div className='slider-arrow-bottom'>\r\n                <i className='material-icons'>arrow_drop_up</i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","const format = (elemTime, duration) => {\r\n    const currTime = elemTime;\r\n    const durationTime = duration;\r\n    const minutes = currTime / 60;\r\n    let m = minutes.toString().substr(0, minutes.toString().indexOf(\".\")) || 0;\r\n    let s = Math.round(currTime % 60).toString() || 0;\r\n    s = parseInt(s) < 10 ? `0${s}` : s;\r\n    m = parseInt(m) < 10 ? `0${m}` : m;\r\n    const timePercentage = (currTime / durationTime) * 100 || null;\r\n\r\n    return { \r\n        s,\r\n        m,\r\n        timePercentage\r\n     }\r\n};\r\n\r\nexport default format;","const fullscreenOff = (setIsFullScreen) => {\r\n    document.addEventListener(\"fullscreenchange\", exitHandler);\r\n    document.addEventListener(\"webkitfullscreenchange\", exitHandler);\r\n    document.addEventListener(\"mozfullscreenchange\", exitHandler);\r\n    document.addEventListener(\"MSFullscreenChange\", exitHandler);\r\n\r\n    function exitHandler() {\r\n        if (\r\n            !document.fullscreenElement &&\r\n            !document.webkitIsFullScreen &&\r\n            !document.mozFullScreen &&\r\n            !document.msFullscreenElement\r\n        ) {\r\n            setIsFullScreen(false);\r\n            const fullscreenOff =\r\n                document.webkitExitFullscreen ||\r\n                document.mozExitFullscreen ||\r\n                document.msExitFullscreen ||\r\n                document.oExitFullscreen;\r\n            fullscreenOff.call(document);\r\n            window.scrollBy(0, 1500);\r\n        }\r\n    }\r\n    \r\n    return exitHandler;\r\n}\r\n\r\nexport default fullscreenOff;","import React from \"react\";\r\n\r\nimport \"./controls-top.css\";\r\n\r\nconst ControlsTop = props => {\r\n\r\n    const { titleData, controlsHidden, isVolumeChange, volume } = props;\r\n\r\n    return (\r\n        <div className='controls-top'>\r\n            <div\r\n                className={\r\n                    controlsHidden\r\n                        ? \"title-wrapper controls-hide\"\r\n                        : \"title-wrapper\"\r\n                }>\r\n                <div className='title video-title'>{titleData[0]}</div>\r\n                <div className='title video-subtitle'>{titleData[1]}</div>\r\n            </div>\r\n\r\n            <div\r\n                className={\r\n                    !isVolumeChange\r\n                        ? \"volume-percentage\"\r\n                        : \"volume-percentage fade\"\r\n                }>\r\n                {volume}%\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ControlsTop;\r\n","import React from \"react\";\r\n\r\nimport \"./pause-big-button.css\";\r\n\r\nconst PauseBigButton = props => {\r\n\r\n    const { setIsPlayButtonHover, playVideo, isPlayButtonHover } = props;\r\n\r\n    return (\r\n        <div className='pause-button-big-wrapper'>\r\n            {isPlayButtonHover ? (\r\n                <i\r\n                    className='material-icons pause-button-big hovered'\r\n                    onClick={() => {\r\n                        playVideo();\r\n                        setIsPlayButtonHover(false);\r\n                    }}\r\n                    onMouseLeave={() => setIsPlayButtonHover(false)}>\r\n                    play_circle_filled\r\n                </i>\r\n            ) : (\r\n                <i\r\n                    className='material-icons pause-button-big'\r\n                    onMouseEnter={() => setIsPlayButtonHover(true)}>\r\n                    play_circle_outline\r\n                </i>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PauseBigButton;\r\n","import React from \"react\";\r\n\r\nimport \"./controls-bottom.css\";\r\n\r\nconst ControlsBottom = props => {\r\n    const {\r\n        controlsHidden,\r\n        isMuted,\r\n        isPlaying,\r\n        progressLine,\r\n        volume,\r\n        mute,\r\n        durationTime,\r\n        playVideo,\r\n        playTime,\r\n        recognizeClick,\r\n        setControlsHidden,\r\n        resize,\r\n        hoverProgressLine,\r\n        hoveredTime,\r\n        positionHoveredTime\r\n    } = props;\r\n\r\n    return (\r\n        <div\r\n            className={controlsHidden ? \"controls-bottom controls-hide\" : \"controls-bottom\"}\r\n            onMouseOut={() => setControlsHidden(true)}\r\n            onMouseOver={() => {\r\n                setTimeout(() => {\r\n                    setControlsHidden(false);\r\n                }, 200);\r\n            }}\r\n        >\r\n            <div className='controls-button play-button'>\r\n                {!isPlaying ? (\r\n                    <i className='material-icons' onClick={() => playVideo()}>\r\n                        play_arrow\r\n                    </i>\r\n                ) : (\r\n                    <i className='material-icons' onClick={() => playVideo()}>\r\n                        pause\r\n                    </i>\r\n                )}\r\n            </div>\r\n            <span className='time start-time'>{playTime}</span>\r\n            <div className='line-wrapper' id='line-wrapper' onClick={e => recognizeClick(e, \"progressLine\")} onMouseMove={e => hoverProgressLine(e)}>\r\n                <div className={isPlaying ? \"line-inner line-inner-ease\" : \"line-inner\"} style={{ width: `${progressLine}%` }}></div>\r\n                <div className='hovered-time' style={{ left: `${positionHoveredTime - 20}px` }}>\r\n                    {hoveredTime}\r\n                </div>\r\n            </div>\r\n\r\n            <span className='time end-time'>{durationTime}</span>\r\n            <div className='controls-button volume'>\r\n                {isMuted || volume === 0 ? (\r\n                    <i className='material-icons' onClick={() => mute()}>\r\n                        volume_off\r\n                    </i>\r\n                ) : (\r\n                    <i className='material-icons' onClick={() => mute()}>\r\n                        volume_up\r\n                    </i>\r\n                )}\r\n                <div className='volume-control-wrapper'>\r\n                    <div className='volume-control-inner' id='volume-control-inner' onClick={e => recognizeClick(e, \"volume\")}>\r\n                        <div className='volume-control' style={{ height: `${volume}%` }} id='volume-control'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='controls-button resize'>\r\n                <i className='material-icons' onClick={() => resize()}>\r\n                    fullscreen\r\n                </i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ControlsBottom;\r\n","import React from 'react';\r\n\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n    <div className=\"loader-wrapper\">\r\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    </div>)\r\n} \r\nexport default Loader;","import React from 'react';\r\n\r\nimport './controls.css';\r\nimport ControlsTop from \"./controls-top\";\r\nimport PauseBigButton from \"./pause-big-button\";\r\nimport ControlsBottom from \"./controls-bottom\";\r\nimport Loader from \"../../components/loader\";\r\n\r\nconst Controls = props => {\r\n\r\n    const {\r\n        titleData,\r\n        canPlay,\r\n        controlsHidden,\r\n        isMuted,\r\n        isPlaying,\r\n        isPlayButtonHover,\r\n        isVolumeChange,\r\n        progressLine,\r\n        volume,\r\n        mute,\r\n        durationTime,\r\n        playVideo,\r\n        playTime,\r\n        recognizeClick,\r\n        setControlsHidden,\r\n        setIsPlayButtonHover,\r\n        resize,\r\n        handleClick,\r\n        handleDoubleClick,\r\n        hoveredTime,\r\n        positionHoveredTime,\r\n        hoverProgressLine\r\n    } = props;\r\n    \r\n    return (\r\n        <div className='controls'>\r\n                    {!canPlay && <Loader />}\r\n                    <div\r\n                        className='controls-clickable'\r\n                        onMouseMove={() => {\r\n                            setControlsHidden(false);\r\n                            setTimeout(() => {\r\n                                setControlsHidden(true);\r\n                            }, 200);\r\n                        }}\r\n                        onClick={handleClick.bind(this)}\r\n                        onDoubleClick={handleDoubleClick.bind(this)}>\r\n                        <ControlsTop\r\n                            titleData={titleData}\r\n                            controlsHidden={controlsHidden}\r\n                            isVolumeChange={isVolumeChange}\r\n                            volume={volume}\r\n                        />\r\n                        {!isPlaying && (\r\n                            <PauseBigButton\r\n                                playVideo={playVideo}\r\n                                setIsPlayButtonHover={setIsPlayButtonHover}\r\n                                isPlayButtonHover={isPlayButtonHover}\r\n                            />\r\n                        )}\r\n                    </div>\r\n\r\n                    <ControlsBottom\r\n                        controlsHidden={controlsHidden}\r\n                        isMuted={isMuted}\r\n                        isPlaying={isPlaying}\r\n                        progressLine={progressLine}\r\n                        volume={volume}\r\n                        mute={mute}\r\n                        durationTime={durationTime}\r\n                        playVideo={playVideo}\r\n                        playTime={playTime}\r\n                        recognizeClick={recognizeClick}\r\n                        setControlsHidden={setControlsHidden}\r\n                        resize={resize}\r\n                        hoverProgressLine={hoverProgressLine}\r\n                        hoveredTime={hoveredTime}\r\n                        positionHoveredTime={positionHoveredTime}\r\n                    />\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Controls;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./player.css\";\r\n\r\nimport format from \"../../helpers/format\";\r\nimport fullscreenOff from \"../../helpers/fullscreenOff\";\r\nimport Controls from \"../../modules/controls\";\r\n\r\n\r\nconst Player = props => {\r\n    useEffect(() => {\r\n        videoEl.current.onmousemove = () => {\r\n            setControlsHidden(false);\r\n        };\r\n\r\n        videoEl.current.oncanplaythrough = () => {\r\n            setCanPlay(true);\r\n        };\r\n\r\n        videoEl.current.onloadedmetadata = () => {\r\n            const formattingTime = format(videoEl.current.duration);\r\n            setDurationTime(`${formattingTime.m}:${formattingTime.s}`);\r\n        };\r\n\r\n        videoEl.current.onloadeddata = () => {\r\n            const savedCurrentTime = parseInt(localStorage.getItem(\"savedCurrentTime\"));\r\n            videoEl.current.currentTime = savedCurrentTime || 0;\r\n            setCanPlay(true);\r\n        };\r\n\r\n        videoEl.current.ontimeupdate = () => {\r\n            const formattingTime = format(videoEl.current.currentTime, videoEl.current.duration);\r\n            updateProgressLine(formattingTime.timePercentage);\r\n            setPlayTime(`${formattingTime.m}:${formattingTime.s}`);\r\n\r\n            localStorage.setItem(\"savedCurrentTime\", videoEl.current.currentTime);\r\n        };\r\n\r\n        videoEl.current.onended = () => {\r\n            setIsPlaying(false);\r\n        };\r\n\r\n        if ((videoEl.current.readyState === 1 && isPlaying) || (videoEl.current.readyState === 2 && isPlaying)) {\r\n            setCanPlay(false);\r\n        } else {\r\n            setCanPlay(true);\r\n        }\r\n    });\r\n\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [volume, setVolume] = useState(75);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [isVolumeChange, setIsVolumeChange] = useState(false);\r\n    const [durationTime, setDurationTime] = useState(null);\r\n    const [playTime, setPlayTime] = useState(\"00:00\");\r\n    const [progressLine, updateProgressLine] = useState(0);\r\n    const [isPlayButtonHover, setIsPlayButtonHover] = useState(false);\r\n    const [controlsHidden, setControlsHidden] = useState(false);\r\n    const [canPlay, setCanPlay] = useState(false);\r\n    const [hoveredTime, setHoveredTime] = useState(null);\r\n    const [positionHoveredTime, setPositionHoveredTime] = useState(null);\r\n\r\n    const videoEl = useRef(null);\r\n    const player = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        updateProgressLine(0);\r\n        setIsPlaying(false);\r\n    }, [props.currVideo]);\r\n\r\n    useEffect(() => {\r\n        setIsVolumeChange(!isVolumeChange);\r\n        setTimeout(() => {\r\n            setIsVolumeChange(true);\r\n        }, 100);\r\n    }, [volume]);\r\n\r\n    const playVideo = () => {\r\n        setIsPlaying(!isPlaying);\r\n        if (isPlaying) {\r\n            videoEl.current.pause();\r\n            setControlsHidden(false);\r\n        } else {\r\n            videoEl.current.play();\r\n            setControlsHidden(true);\r\n        }\r\n    };\r\n\r\n    const hoverProgressLine = e => {\r\n        const elemLeft = document.getElementById(\"line-wrapper\").getBoundingClientRect().left;\r\n        const elemRight = document.getElementById(\"line-wrapper\").getBoundingClientRect().right;\r\n        const fullWidth = elemRight - elemLeft;\r\n        const newWidth = e.clientX - elemLeft;\r\n        const time = format((videoEl.current.duration * newWidth) / fullWidth);\r\n        setPositionHoveredTime(newWidth);\r\n        setHoveredTime(`${time.m}:${time.s}`);     \r\n    };\r\n\r\n    const resize = () => {\r\n        if (!isFullScreen) {\r\n            const fullscreen =\r\n                player.current.webkitRequestFullscreen ||\r\n                player.current.mozRequestFullScreen ||\r\n                player.current.msRequestFullscreen ||\r\n                player.current.oRequestFullscreen;\r\n            fullscreen.call(player.current);\r\n        } else if (isFullScreen) {\r\n            const fullscreenOff =\r\n                document.webkitExitFullscreen || document.mozExitFullscreen || document.msExitFullscreen || document.oExitFullscreen;\r\n            fullscreenOff.call(document);\r\n        }\r\n        setIsFullScreen(!isFullScreen);\r\n    };\r\n\r\n    const mute = () => {\r\n        setIsMuted(!isMuted);\r\n        if (isMuted) {\r\n            videoEl.current.muted = false;\r\n            setVolume(35);\r\n        } else {\r\n            videoEl.current.muted = true;\r\n            setVolume(0);\r\n        }\r\n    };\r\n\r\n    const recognizeClick = (e, elem) => {\r\n        if (elem === \"volume\") {\r\n            const fullVolume = document.getElementById(\"volume-control-inner\").getBoundingClientRect();\r\n            const newVolume = e.clientY;\r\n            const s = fullVolume.top - newVolume;\r\n            const volume = 1 - (s / 85) * -1;\r\n            setVolume(Math.round(volume * 100));\r\n            videoEl.current.volume = volume;\r\n        } else if (elem === \"progressLine\") {\r\n            const elemLeft = document.getElementById(\"line-wrapper\").getBoundingClientRect().left;\r\n            const elemRight = document.getElementById(\"line-wrapper\").getBoundingClientRect().right;\r\n            const fullWidth = elemRight - elemLeft;\r\n            const newWidth = e.clientX - elemLeft;\r\n            const newPlayTimePercentage = newWidth / fullWidth;\r\n            updateProgressLine(newPlayTimePercentage * 100);\r\n            const newCurrentTime = newPlayTimePercentage * videoEl.current.duration;\r\n            videoEl.current.currentTime = newCurrentTime;\r\n        }\r\n    };\r\n\r\n    let timer = 0;\r\n    let prevent = false;\r\n\r\n    const handleClick = () => {\r\n        timer = setTimeout(function() {\r\n            if (!prevent) {\r\n                playVideo();\r\n            }\r\n            prevent = false;\r\n        }, 300);\r\n    };\r\n    const handleDoubleClick = () => {\r\n        clearTimeout(timer);\r\n        prevent = true;\r\n        resize();\r\n    };\r\n\r\n    const keyAction = e => {\r\n        switch (e.keyCode) {\r\n            case 38:\r\n                e.preventDefault();\r\n                const newVolume1 = volume <= 95 ? volume + 5 : 100;\r\n                setVolume(newVolume1);\r\n                videoEl.current.volume = newVolume1 / 100;\r\n                break;\r\n            case 40:\r\n                e.preventDefault();\r\n                const newVolume2 = volume >= 5 ? volume - 5 : 0;\r\n                setVolume(newVolume2);\r\n                videoEl.current.volume = newVolume2 / 100;\r\n                break;\r\n            case 32:\r\n                setIsPlayButtonHover(false);\r\n                e.preventDefault();\r\n                if (videoEl.current.play) {\r\n                    playVideo();\r\n                }\r\n                break;\r\n            case 39:\r\n                videoEl.current.currentTime = videoEl.current.currentTime + 5;\r\n                break;\r\n            case 37:\r\n                videoEl.current.currentTime = videoEl.current.currentTime - 5;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    fullscreenOff(setIsFullScreen);\r\n\r\n    const { currVideo, titleData } = props;\r\n\r\n    return (\r\n        <div className='player-block'>\r\n            <div ref={player} onKeyDown={e => keyAction(e)} tabIndex='0' className={isFullScreen ? \"fullscreen\" : \"video-wrapper\"}>\r\n                <video ref={videoEl} className='video' style={{ objectFit: \"cover\" }} src={currVideo}></video>\r\n\r\n                <Controls\r\n                    titleData={titleData}\r\n                    canPlay={canPlay}\r\n                    controlsHidden={controlsHidden}\r\n                    isMuted={isMuted}\r\n                    isPlaying={isPlaying}\r\n                    isPlayButtonHover={isPlayButtonHover}\r\n                    isVolumeChange={isVolumeChange}\r\n                    progressLine={progressLine}\r\n                    volume={volume}\r\n                    mute={mute}\r\n                    durationTime={durationTime}\r\n                    playVideo={playVideo}\r\n                    playTime={playTime}\r\n                    recognizeClick={recognizeClick}\r\n                    setControlsHidden={setControlsHidden}\r\n                    setIsPlayButtonHover={setIsPlayButtonHover}\r\n                    resize={resize}\r\n                    handleClick={handleClick}\r\n                    handleDoubleClick={handleDoubleClick}\r\n                    hoverProgressLine={hoverProgressLine}\r\n                    hoveredTime={hoveredTime}\r\n                    positionHoveredTime={positionHoveredTime}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","const redTheme = {\r\n    '--color-main': '#ff2c2c',\r\n    '--color-secondary': '#0c0c0c',\r\n    '--color-bg': '#0c0c0c',\r\n    '--color-text': '#fff'\r\n}\r\n\r\nconst pinkTheme = {\r\n    '--color-main': '#ec174f',\r\n    '--color-secondary': '#808080',\r\n    '--color-bg': '#1a143a',\r\n    '--color-text': '#fff'\r\n}\r\n\r\nexport {\r\n    redTheme,\r\n    pinkTheme\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport \"./title.css\";\r\nimport { pinkTheme, redTheme } from \"../../themes\";\r\n\r\nconst Title = () => {\r\n    useEffect(() => {\r\n        const savedTheme = localStorage.getItem(\"theme\");\r\n        applyTheme(savedTheme || currentTheme);\r\n    });\r\n\r\n    const [currentTheme, setTheme] = React.useState(\"pink\");\r\n\r\n    const switchTheme = theme => {\r\n        const newTheme = theme === \"pink\" ? \"pink\" : \"red\";\r\n        localStorage.setItem(\"theme\", newTheme);\r\n        setTheme(newTheme);\r\n        applyTheme(newTheme);\r\n    };\r\n\r\n    const applyTheme = nextTheme => {\r\n        const theme = nextTheme === \"red\" ? pinkTheme : redTheme;\r\n        Object.keys(theme).forEach(key => {\r\n            const value = theme[key];\r\n            document.documentElement.style.setProperty(key, value);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='main-title-wrapper'>\r\n            <div className='main-title'>MPlayer</div>\r\n            <button className='btn-switch-theme theme-1' onClick={() => switchTheme(\"red\")}></button>\r\n            <button className='btn-switch-theme theme-2' onClick={() => switchTheme(\"pink\")}></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import React, { useState } from \"react\";\n\nimport \"./app.css\";\nimport Menu from \"./components/menu\";\nimport Player from \"./components/player\";\nimport Title from \"./components/title\";\nimport testData from \"./testData.json\";\n\nfunction App() {\n    const savedVideo = parseInt(localStorage.getItem(\"savedVideo\"));\n\n    const [currVideo, setCurrVideo] = useState(testData.data[savedVideo - 1 || 2].sources);\n    const [titleData, setTitleData] = useState([testData.data[savedVideo - 1 || 2].title, testData.data[savedVideo - 1 || 2].subtitle]);\n\n    const catchVideoId = id => {\n        testData.data.forEach(item => {\n            if (item.id === id) {\n                setCurrVideo(item.sources);\n                setTitleData([item.title, item.subtitle]);\n                localStorage.setItem(\"savedVideo\", id);\n            }\n        });\n    };\n\n    return (\n        <div className='app'>\n            <Title />\n            <Menu data={testData.data} catchVideoId={catchVideoId} savedVideo={savedVideo} />\n            <Player currVideo={currVideo} titleData={titleData} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}